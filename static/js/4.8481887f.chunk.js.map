{"version":3,"sources":["../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/@material-ui/core/esm/utils/setRef.js","../node_modules/@material-ui/core/esm/utils/useForkRef.js","../node_modules/@material-ui/core/esm/styles/useTheme.js","../node_modules/@material-ui/core/esm/transitions/utils.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/@material-ui/core/esm/Slide/Slide.js","../node_modules/@material-ui/core/esm/utils/debounce.js","views/LoginView/LoginView.module.css","views/LoginView/LoginView.jsx"],"names":["React","createContext","setRef","ref","value","current","useForkRef","refA","refB","refValue","useTheme","useThemeWithoutDefault","defaultTheme","reflow","node","scrollTop","getTransitionProps","props","options","timeout","_props$style","style","duration","transitionDuration","mode","delay","transitionDelay","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","context","_this","call","this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","_inheritsLoose","getDerivedStateFromProps","_ref","prevState","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","undefined","mounting","performEnter","performExit","setState","_this2","appearing","_ref2","nodeRef","ReactDOM","findDOMNode","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","children","childProps","_objectWithoutPropertiesLoose","createElement","TransitionGroupContext","Provider","cloneElement","Children","only","Component","noop","contextType","propTypes","defaultProps","setTranslateValue","direction","transform","rect","getBoundingClientRect","fakeTransform","computedStyle","window","getComputedStyle","getPropertyValue","offsetX","offsetY","transformValues","split","parseInt","concat","innerWidth","left","width","innerHeight","top","height","getTranslateValue","webkitTransform","defaultTimeout","enteringScreen","leavingScreen","Slide","_props$direction","inProp","_props$timeout","_props$TransitionComp","TransitionComponent","other","_objectWithoutProperties","theme","childrenRef","handleOwnRef","instance","handleRefIntermediary","handleRef","normalizedTransitionCallback","isAppearing","handleEnter","handleEntering","transitionProps","webkitTransition","transitions","create","_extends","easing","easeOut","transition","handleEntered","handleExiting","handleExit","sharp","handleExited","updatePosition","handleResize","func","wait","arguments","length","debounced","_len","args","Array","_key","that","later","apply","clearTimeout","clear","debounce","addEventListener","removeEventListener","visibility","module","exports","LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","className","styles","container","tittle","onSubmit","e","preventDefault","authOperations","logIn","form","autoComplete","label","input","type","name","onChange","target","button"],"mappings":"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","file":"static/js/4.8481887f.chunk.js","sourcesContent":["import React from 'react';\nexport default React.createContext(null);","// TODO v5: consider to make it private\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","import * as React from 'react';\nimport setRef from './setRef';\nexport default function useForkRef(refA, refB) {\n  /**\n   * This will create a new function if the ref props change and are defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior\n   */\n  return React.useMemo(function () {\n    if (refA == null && refB == null) {\n      return null;\n    }\n\n    return function (refValue) {\n      setRef(refA, refValue);\n      setRef(refB, refValue);\n    };\n  }, [refA, refB]);\n}","import { useTheme as useThemeWithoutDefault } from '@material-ui/styles';\nimport React from 'react';\nimport defaultTheme from './defaultTheme';\nexport default function useTheme() {\n  var theme = useThemeWithoutDefault() || defaultTheme;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n\n  return theme;\n}","export var reflow = function reflow(node) {\n  return node.scrollTop;\n};\nexport function getTransitionProps(props, options) {\n  var timeout = props.timeout,\n      _props$style = props.style,\n      style = _props$style === void 0 ? {} : _props$style;\n  return {\n    duration: style.transitionDuration || typeof timeout === 'number' ? timeout : timeout[options.mode] || 0,\n    delay: style.transitionDelay\n  };\n}","export default {\n  disabled: false\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : PropTypes.instanceOf(Element)\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport debounce from '../utils/debounce';\nimport { Transition } from 'react-transition-group';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useTheme from '../styles/useTheme';\nimport { duration } from '../styles/transitions';\nimport { reflow, getTransitionProps } from '../transitions/utils'; // Translate the node so he can't be seen on the screen.\n// Later, we gonna translate back the node to his original location\n// with `none`.`\n\nfunction getTranslateValue(direction, node) {\n  var rect = node.getBoundingClientRect();\n  var transform;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    var computedStyle = window.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n  }\n\n  var offsetX = 0;\n  var offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    var transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n\n  if (direction === 'left') {\n    return \"translateX(\".concat(window.innerWidth, \"px) translateX(\").concat(offsetX - rect.left, \"px)\");\n  }\n\n  if (direction === 'right') {\n    return \"translateX(-\".concat(rect.left + rect.width - offsetX, \"px)\");\n  }\n\n  if (direction === 'up') {\n    return \"translateY(\".concat(window.innerHeight, \"px) translateY(\").concat(offsetY - rect.top, \"px)\");\n  } // direction === 'down'\n\n\n  return \"translateY(-\".concat(rect.top + rect.height - offsetY, \"px)\");\n}\n\nexport function setTranslateValue(direction, node) {\n  var transform = getTranslateValue(direction, node);\n\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\nvar defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The Slide transition is used by the [Drawer](/components/drawers/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Slide = /*#__PURE__*/React.forwardRef(function Slide(props, ref) {\n  var children = props.children,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'down' : _props$direction,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? defaultTimeout : _props$timeout,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Transition : _props$TransitionComp,\n      other = _objectWithoutProperties(props, [\"children\", \"direction\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  var theme = useTheme();\n  var childrenRef = React.useRef(null);\n  /**\n   * used in cloneElement(children, { ref: handleRef })\n   */\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    childrenRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRefIntermediary = useForkRef(children.ref, handleOwnRef);\n  var handleRef = useForkRef(handleRefIntermediary, ref);\n\n  var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {\n    return function (isAppearing) {\n      if (callback) {\n        // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n        if (isAppearing === undefined) {\n          callback(childrenRef.current);\n        } else {\n          callback(childrenRef.current, isAppearing);\n        }\n      }\n    };\n  };\n\n  var handleEnter = normalizedTransitionCallback(function (node, isAppearing) {\n    setTranslateValue(direction, node);\n    reflow(node);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  var handleEntering = normalizedTransitionCallback(function (node, isAppearing) {\n    var transitionProps = getTransitionProps({\n      timeout: timeout,\n      style: style\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.webkitTransform = 'none';\n    node.style.transform = 'none';\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  var handleEntered = normalizedTransitionCallback(onEntered);\n  var handleExiting = normalizedTransitionCallback(onExiting);\n  var handleExit = normalizedTransitionCallback(function (node) {\n    var transitionProps = getTransitionProps({\n      timeout: timeout,\n      style: style\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.sharp\n    }));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.sharp\n    }));\n    setTranslateValue(direction, node);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  var handleExited = normalizedTransitionCallback(function (node) {\n    // No need for transitions when the component is hidden\n    node.style.webkitTransition = '';\n    node.style.transition = '';\n\n    if (onExited) {\n      onExited(node);\n    }\n  });\n  var updatePosition = React.useCallback(function () {\n    if (childrenRef.current) {\n      setTranslateValue(direction, childrenRef.current);\n    }\n  }, [direction]);\n  React.useEffect(function () {\n    // Skip configuration where the position is screen size invariant.\n    if (inProp || direction === 'down' || direction === 'right') {\n      return undefined;\n    }\n\n    var handleResize = debounce(function () {\n      if (childrenRef.current) {\n        setTranslateValue(direction, childrenRef.current);\n      }\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [direction, inProp]);\n  React.useEffect(function () {\n    if (!inProp) {\n      // We need to update the position of the drawer when the direction change and\n      // when it's hidden.\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    nodeRef: childrenRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    appear: true,\n    in: inProp,\n    timeout: timeout\n  }, other), function (state, childProps) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({\n      ref: handleRef,\n      style: _extends({\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, style, children.props.style)\n    }, childProps));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Slide.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n\n  /**\n   * Direction the child node will enter from.\n   */\n  direction: PropTypes.oneOf(['down', 'left', 'right', 'up']),\n\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Slide;","// Corresponds to 10 frames at 60 Hz.\n// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\nexport default function debounce(func) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 166;\n  var timeout;\n\n  function debounced() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // eslint-disable-next-line consistent-this\n    var that = this;\n\n    var later = function later() {\n      func.apply(that, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n\n  debounced.clear = function () {\n    clearTimeout(timeout);\n  };\n\n  return debounced;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginView_container__2cgRt\",\"tittle\":\"LoginView_tittle__bPQuC\",\"form\":\"LoginView_form__17MMM\",\"label\":\"LoginView_label__33FlG\",\"input\":\"LoginView_input__2SsFj\",\"button\":\"LoginView_button__2Unyx\"};","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport styles from './LoginView.module.css';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\n// const mapDispatchToProps = {\r\n//   onLogin: authOperations.logIn,\r\n// };\r\n\r\n// export default connect(null, mapDispatchToProps)(LoginView);\r\n\r\nexport default function LoginView() {\r\n  // state = {\r\n  //   email: '',\r\n  //   password: '',\r\n  // };\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  // handleChange = ({ target: { name, value } }) => {\r\n  //   this.setState({ [name]: value });\r\n  // };\r\n  const handleChangeEmail = ({ target }) => {\r\n    setEmail(target.value);\r\n  };\r\n  const handleChangePassword = ({ target }) => {\r\n    setPassword(target.value);\r\n  };\r\n\r\n  // handleSubmit = e => {\r\n  //   e.preventDefault();\r\n  //   this.props.onLogin(this.state);\r\n  //   this.setState({ name: '', email: '', password: '' });\r\n  // };\r\n  //  const { email, password } = this.state;\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    dispatch(authOperations.logIn({ email, password }));\r\n\r\n    setEmail('');\r\n    setPassword('');\r\n  }; \r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <Slide direction=\"right\" in={true} timeout={300} mountOnEnter unmountOnExit>\r\n          <h1 className={styles.tittle}>Log in</h1>\r\n          </Slide>\r\n\r\n        <form\r\n          onSubmit={handleSubmit}\r\n          className={styles.form}\r\n          autoComplete=\"off\"\r\n        >\r\n          <label className={styles.label}>\r\n            Mail\r\n             \r\n          </label>\r\n          <input  className={styles.input}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={handleChangeEmail}\r\n            />\r\n\r\n          <label className={styles.label}>\r\n            Password\r\n             \r\n          </label>\r\n          <input  className={styles.input}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handleChangePassword}\r\n            />\r\n\r\n          <button className={styles.button} type=\"submit\">Log in</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n"],"sourceRoot":""}