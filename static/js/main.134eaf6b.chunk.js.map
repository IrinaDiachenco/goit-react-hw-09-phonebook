{"version":3,"sources":["redux/contact/contact-actions.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.jsx","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.jsx","components/AuthNav/AuthNav.jsx","components/AppBar/AppBar.jsx","components/Container/Container.jsx","components/Route/PrivatRoute.jsx","components/Route/PublicRoute.jsx","components/App/App.js","redux/contact/contact-reducer.js","redux/auth/auth-reduser.js","redux/store.js","index.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js","components/Loader/Loader.jsx","components/Loader/Loader.module.css"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","toggleCompletedRequest","toggleCompletedSuccess","toggleCompletedError","changeFilter","authSelectors","getIsAuthenticated","state","auth","isAuthenticated","getUsername","user","name","getError","error","getToken","token","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","isLoggedIn","useSelector","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","UserMenu","dispatch","useDispatch","onLogOut","useCallback","authOperations","logOut","src","defaultAvatar","alt","width","type","onClick","AuthNav","header","justifyContent","AppBarNav","AppBar","Container","children","className","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","getCurrentUser","fallback","Loader","path","component","items","createReducer","_","payload","filter","id","map","todo","loading","combineReducers","initialUserState","email","authActions","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","setError","registerError","loginError","logoutError","getCurrentUserError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactReducer","devTools","process","pers","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","axios","defaults","baseURL","headers","common","Authorization","register","credentials","a","registerRequest","post","response","data","message","logoutRequest","logIn","loginRequest","getState","persistedToken","getCurrentUserRequest","get","Preloader","s","loader","height","Component","module","exports"],"mappings":"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","file":"static/js/main.134eaf6b.chunk.js","sourcesContent":["\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const toggleCompletedRequest = createAction(\r\n  'contacts/toggleCompletedRequest',\r\n);\r\nexport const toggleCompletedSuccess = createAction(\r\n  'contacts/toggleCompletedSuccess',\r\n);\r\nexport const toggleCompletedError = createAction('contacts/toggleCompletedError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');","// const getIsAuthenticated = state => Boolean(state.auth.token);\r\nconst getIsAuthenticated = state => state.auth.isAuthenticated;\r\nconst getUsername = state => state.auth.user.name;\r\nconst getError = state => state.auth.error;\r\nconst getToken = state => state.auth.token;\r\n\r\nconst authSelectors = {\r\n  getIsAuthenticated,\r\n  getUsername,\r\n  getError,\r\n  getToken\r\n};\r\n\r\nexport default authSelectors;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//   isLoggedIn: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(Navigation);\r\n\r\nexport default function Navigation() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated)\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n        Home\r\n    </NavLink>\r\n\r\n      {isLoggedIn && (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          exact\r\n          style={styles.link}\r\n          activeStyle={styles.activeLink}\r\n        >\r\n          Phonebook\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React, {useCallback} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport defaultAvatar from './default-avatar.png';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//   name: authSelectors.getUsername(state),\r\n//   avatar: defaultAvatar,\r\n// });\r\n\r\n// const mapDispatchToProps = {\r\n//   onLogout: authOperations.logOut,\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUsername);\r\n  const onLogOut = useCallback(() => {\r\n    dispatch(authOperations.logOut());\r\n  }, [dispatch]);\r\n  return (\r\n    <div style={styles.container}>\r\n      <img src={defaultAvatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n      <span style={styles.name}>Welcome, {name}</span>\r\n      <button\r\n        type=\"button\"\r\n        onClick={onLogOut}>\r\n        Logout\r\n    </button>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Check in\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Log in\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport { AppBar } from '@material-ui/core';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(AppBarNav);\r\n\r\nexport default function AppBarNav() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated)\r\nreturn (\r\n  <AppBar>\r\n   <header style={styles.header}>\r\n    <Navigation />\r\n    {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  </AppBar>\r\n)\r\n};\r\n","import React from 'react';\r\n//import './Container.scss';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\n// const mapStateToProps = state => ({\r\n//   token: authSelectors.getToken(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(PrivateRoute);\r\n\r\nexport default function PrivateRoute({\r\n  isAuthenticated,\r\n  children,\r\n  redirectTo,\r\n  ...routeProps\r\n}) {\r\n  const token = useSelector(authSelectors.getToken);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {token ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\n// const mapStateToProps = state => ({\r\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(PublicRoute);\r\n\r\nexport default function PublicRoute({\r\n  isAuthenticated,\r\n  children,\r\n  redirectTo,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated)\r\n  return (\r\n    <Route {...routeProps}>\r\n        {isLoggedIn && routeProps.restricted ? (\r\n          <Redirect to={redirectTo} />\r\n        ) : (\r\n          children\r\n        )}\r\n    </Route>\r\n  );\r\n}\r\n","import React, { Suspense, lazy, useEffect } from 'react';\nimport { Switch } from 'react-router-dom';\nimport AppBar from '../AppBar/AppBar';\nimport Container from '../Container/Container';\nimport { useDispatch } from 'react-redux';\nimport authOperations from '../../redux/auth/auth-operations';\nimport PrivateRoute from '../Route/PrivatRoute';\nimport PublicRoute from '../Route/PublicRoute';\nimport Loader from '../Loader/Loader';\n\nconst HomeView = lazy(() => import('../../views/HomeView/HomeView'));\nconst RegisterView = lazy(() => import('../../views/RegisterView/RegisterView'));\nconst LoginView = lazy(() => import('../../views/LoginView/LoginView'));\nconst ContactsView = lazy(() => import('../../views/ContactsView/ContactsView'));\n\n// const mapDispatchToProps = {\n//   onGetCurretnUser: authOperations.getCurrentUser,\n// };\n\n// export default connect(null, mapDispatchToProps)(App);\n\nexport default function App() {\n  const dispatch = useDispatch();\n  // componentDidMount() {\n  //   this.props.onGetCurretnUser();\n  // }\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n    return (\n  <Container>\n  <AppBar />\n    <Suspense fallback={<Loader />}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={RegisterView}\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={LoginView}\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              redirectTo=\"/login\"\n              component={ContactsView}\n            />\n          </Switch>\n        </Suspense>\n</Container>\n);\n}\n\n\n\n\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { changeFilter,\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  fetchContactsSuccess,\r\n  addContactRequest,\r\n  deleteContactRequest,\r\n  fetchContactsRequest,\r\n  addContactError,\r\n  deleteContactError,\r\n  fetchContactsError,\r\n  toggleCompletedRequest,\r\n  toggleCompletedSuccess,\r\n  toggleCompletedError,\r\n} from './contact-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n  [toggleCompletedSuccess]: (state, { payload }) =>\r\n    state.map(todo => (todo.id === payload.id ? payload : todo)),\r\n})\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, {payload}) => payload,\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [toggleCompletedRequest]: () => true,\r\n  [toggleCompletedSuccess]: () => false,\r\n  [toggleCompletedError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});","\r\nimport contactReducer from './contact/contact-reducer';\r\nimport authReducer from './auth/auth-reduser';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst pers = { store, persistor };\r\n\r\nexport default pers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App/App';\nimport { BrowserRouter } from \"react-router-dom\";\n//import reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body { name, email, password }\r\n *\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/login\r\n * body:\r\n *    { email, password }\r\n *\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nconst authOperations = { register, logOut, logIn, getCurrentUser };\r\nexport default authOperations;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nconst authActions = {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\nexport default authActions;","import { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\n\r\nexport default class Preloader extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n      <Loader className={s.loader}\r\n       type='Circles'\r\n        color='#3f51b5'\r\n        height={150}\r\n        width={150}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1z6Fm\"};"],"sourceRoot":""}